{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: []\n  },\n  reducers: {\n    addItemToCart: (state, action) => {\n      const item = action.payload;\n      console.log(item);\n      const exist = state.items.find(cartItem => cartItem.id === item.id);\n      // console.log(exist);\n      if (exist) {\n        return {\n          ...state,\n          items: state.items.map(cartItem => {\n            if (cartItem.id === exist.id) {\n              return {\n                ...cartItem,\n                quantity: cartItem.quantity + 1\n              };\n            }\n            console.log(cartItem.quantity);\n            return cartItem;\n          })\n        };\n      }\n      return {\n        ...state,\n        items: [...state.items, {\n          ...item,\n          quantity: 1\n        }]\n      };\n    },\n    removeItemFromCart: (state, action) => {\n      const item = action.payload;\n      const exist = state.items.find(cartItem => cartItem.id === item.id);\n      if (exist.quantity === 1) {\n        return {\n          ...state,\n          items: state.items.filter(cartItem => cartItem.id !== item.id)\n        };\n      }\n      return {\n        ...state,\n        items: state.items.map(cartItem => {\n          if (cartItem.id === exist.id) {\n            return {\n              ...cartItem,\n              quantity: cartItem.quantity - 1\n            };\n          }\n          return cartItem;\n        })\n      };\n    },\n    clearCartItem: (state, action) => {\n      return {\n        ...state,\n        items: state.items.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n    },\n    clearCart: state => {\n      return {\n        ...state,\n        items: []\n      };\n    },\n    setCartItems: (state, action) => {\n      return {\n        ...state,\n        items: action.payload\n      };\n    }\n  }\n});\nexport const CART_SLICE_ACTIONS = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","reducers","addItemToCart","state","action","item","payload","console","log","exist","find","cartItem","id","map","quantity","removeItemFromCart","filter","clearCartItem","clearCart","setCartItems","CART_SLICE_ACTIONS","actions","reducer"],"sources":["/Users/ivan.jirjees/Desktop/7eÌ€me_Arche_frontEnd/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n  },\n  reducers: {\n    addItemToCart: (state, action) => {\n      const item = action.payload;\n      console.log(item);\n      const exist = state.items.find(cartItem => cartItem.id === item.id);\n      // console.log(exist);\n      if (exist) {\n        return {\n          ...state,\n          items: state.items.map(cartItem => {\n            if (cartItem.id === exist.id) {\n              return {\n                ...cartItem,\n                quantity: cartItem.quantity + 1\n              }\n            }\n            console.log(cartItem.quantity);\n            return cartItem;\n          })\n        }\n      }\n      return {\n        ...state,\n        items: [...state.items, { ...item, quantity: 1 }]\n      }\n    },\n    removeItemFromCart: (state, action) => {\n      const item = action.payload;\n      const exist = state.items.find(cartItem => cartItem.id === item.id);\n      if (exist.quantity === 1) {\n        return {\n          ...state,\n          items: state.items.filter(cartItem => cartItem.id !== item.id)\n        }\n      }\n      return {\n        ...state,\n        items: state.items.map(cartItem => {\n          if (cartItem.id === exist.id) {\n            return {\n              ...cartItem,\n              quantity: cartItem.quantity - 1\n            }\n          }\n          return cartItem;\n        })\n      }\n    },\n    clearCartItem: (state, action) => {\n      return {\n        ...state,\n        items: state.items.filter(cartItem => cartItem.id !== action.payload.id)\n      }\n    },\n    clearCart: (state) => {\n      return {\n        ...state,\n        items: []\n      }\n    },\n    setCartItems: (state, action) => {\n      return {\n        ...state,\n        items: action.payload\n      }\n    }\n  }\n});\n\n\nexport const CART_SLICE_ACTIONS = cartSlice.actions;\n\nexport default cartSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}